{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BetterCommands BetterCommands is a command library written in the Lua programming language, this library is to beginner programmers who need commands in their Roblox game. This product is under the MIT license. Click here to check the license Contact Discord: River#7479 Roblox: RiverCryptz Info Right now I'm not accepting random Roblox friend request but we can always talk via Discord.","title":"Home"},{"location":"#bettercommands","text":"BetterCommands is a command library written in the Lua programming language, this library is to beginner programmers who need commands in their Roblox game. This product is under the MIT license. Click here to check the license","title":"BetterCommands"},{"location":"#contact","text":"Discord: River#7479 Roblox: RiverCryptz Info Right now I'm not accepting random Roblox friend request but we can always talk via Discord.","title":"Contact"},{"location":"api/await/","text":"Await API Danger .await() will wait using loops and this may cause lag ( timeout: 100s ) Hint .await() does not generates yielding in script. .await() usage Params method <string> Method to wait for settings <table> Method settings Methods response settings command (not optional) timeout (optional) callback (not optional) Example function ( info ) -- callback of listen() module . await ( \"response\" , { -- Method settings command = info , timeout = 5 , -- in seconds callback = function ( response ) print ( response ) end } ) end","title":"Await API"},{"location":"api/await/#await-api","text":"Danger .await() will wait using loops and this may cause lag ( timeout: 100s ) Hint .await() does not generates yielding in script.","title":"Await API"},{"location":"api/await/#await-usage","text":"Params method <string> Method to wait for settings <table> Method settings Methods response settings command (not optional) timeout (optional) callback (not optional)","title":".await() usage"},{"location":"api/await/#example","text":"function ( info ) -- callback of listen() module . await ( \"response\" , { -- Method settings command = info , timeout = 5 , -- in seconds callback = function ( response ) print ( response ) end } ) end","title":"Example"},{"location":"api/cmdsapi/","text":"Commands API .listen() is the function used to create commands .listen() settings Params command <string> This is the command name (not optional) callback <function> Function to fire after the command was executed (not optional) roles <table> Roles who can use the command (leave this nil and everyone will be able) min_params <number> Minimun params acceptable in the command (leave this nil and will be 1) Example module . listen ( { -- settings [ \"command\" ] = \"help\" -- Not optional [ \"roles\" ] = { \"admin\" }, [ \"min_params\" ] = 4 , [ \"callback\" ] = function ( info ) print ( info ) end } ) .listen() callback return Return-type of the command callback. Return-type caller <instance; player> Player who fired the command arguments <table> Arguments have no index, these are just <string> values. Example Script [ \"callback\" ] = function ( info ) print ( info . arguments ) end Output Arguments have no <string> index, these have <number> index. { [ 1 ] = \"param\" }","title":"Documentation"},{"location":"api/cmdsapi/#commands-api","text":".listen() is the function used to create commands","title":"Commands API"},{"location":"api/cmdsapi/#listen-settings","text":"Params command <string> This is the command name (not optional) callback <function> Function to fire after the command was executed (not optional) roles <table> Roles who can use the command (leave this nil and everyone will be able) min_params <number> Minimun params acceptable in the command (leave this nil and will be 1)","title":".listen() settings"},{"location":"api/cmdsapi/#example","text":"module . listen ( { -- settings [ \"command\" ] = \"help\" -- Not optional [ \"roles\" ] = { \"admin\" }, [ \"min_params\" ] = 4 , [ \"callback\" ] = function ( info ) print ( info ) end } )","title":"Example"},{"location":"api/cmdsapi/#listen-callback-return","text":"Return-type of the command callback. Return-type caller <instance; player> Player who fired the command arguments <table> Arguments have no index, these are just <string> values.","title":".listen() callback return"},{"location":"api/cmdsapi/#example_1","text":"Script [ \"callback\" ] = function ( info ) print ( info . arguments ) end Output Arguments have no <string> index, these have <number> index. { [ 1 ] = \"param\" }","title":"Example"},{"location":"api/commandhandler/","text":"Command Handler Command-Handler is a library which makes your life easier while coding commands. Failure This module is not available right now.","title":"Command Handler"},{"location":"api/commandhandler/#command-handler","text":"Command-Handler is a library which makes your life easier while coding commands. Failure This module is not available right now.","title":"Command Handler"},{"location":"api/inputBind/","text":"InputBind API Bug As I said in the \"Editing Input Binds\" section, the changes may not be applied on high ping players. .inputBind() usage This function is the core of the InputBind API Function Params Input Method <string> Input Method to edit New KeyCode <string> This will be the new key of the input method Input Method List CommandBar KeyCode used to open/close command-bar (default: K)","title":"InputBind API"},{"location":"api/inputBind/#inputbind-api","text":"Bug As I said in the \"Editing Input Binds\" section, the changes may not be applied on high ping players.","title":"InputBind API"},{"location":"api/inputBind/#inputbind-usage","text":"This function is the core of the InputBind API Function Params Input Method <string> Input Method to edit New KeyCode <string> This will be the new key of the input method Input Method List CommandBar KeyCode used to open/close command-bar (default: K)","title":".inputBind() usage"},{"location":"api/misc/","text":"Miscellaneous .catch() usage .catch() is a function which returns in every function you fire, this function is useful to handle errors. Example Script module . listen ( [ \"command\" ] = \"hello\" , [ \"callback\" ] = function () error ( \"Error\" ) end ). catch ( function ( err ) print ( \"error detected: \" .. err ) end ) Output error detected: Error .then_do() usage .then_do() is a function which returns in every function you fire(like .catch) but this is more a callback that fires when the first function you fired ends. Example Script module . listen ( [ \"command\" ] = \"hello\" , [ \"callback\" ] = function () error ( \"Error\" ) end ). then_do ( function () print ( \"command created\" ) end ) Output command created Tip You can use local cmd = module . listen () -- Every function returns a table which has \"then_do\" and \"catch\" functions. cmd . then_do ( callback ) cmd . catch ( callback ) .getcommands() usage Returns all commands with their properties. Return commands <table> .getroles() usage Returns all roles with their properties. Return roles <table>","title":"Miscellaneous"},{"location":"api/misc/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"api/misc/#catch-usage","text":".catch() is a function which returns in every function you fire, this function is useful to handle errors.","title":".catch() usage"},{"location":"api/misc/#example","text":"Script module . listen ( [ \"command\" ] = \"hello\" , [ \"callback\" ] = function () error ( \"Error\" ) end ). catch ( function ( err ) print ( \"error detected: \" .. err ) end ) Output error detected: Error","title":"Example"},{"location":"api/misc/#then_do-usage","text":".then_do() is a function which returns in every function you fire(like .catch) but this is more a callback that fires when the first function you fired ends.","title":".then_do() usage"},{"location":"api/misc/#example_1","text":"Script module . listen ( [ \"command\" ] = \"hello\" , [ \"callback\" ] = function () error ( \"Error\" ) end ). then_do ( function () print ( \"command created\" ) end ) Output command created Tip You can use local cmd = module . listen () -- Every function returns a table which has \"then_do\" and \"catch\" functions. cmd . then_do ( callback ) cmd . catch ( callback )","title":"Example"},{"location":"api/misc/#getcommands-usage","text":"Returns all commands with their properties. Return commands <table>","title":".getcommands() usage"},{"location":"api/misc/#getroles-usage","text":"Returns all roles with their properties. Return roles <table>","title":".getroles() usage"},{"location":"api/notifapi/","text":"Notifications API Warning Notifications were explained in the \"setup\" section; this page only explains the function params. .send() settings Params receiver <instance; player> Player who will receive the notification (not optional) title <string> This is the title of the notification (leave nil and will be \"Alert\") text <string> This is the text of the notification (not optional) color <color3> Color of the notification (leave it nil and will be \"Pink-red\") Hint Color property accepts <brickcolor> constructor.","title":"Notification API"},{"location":"api/notifapi/#notifications-api","text":"Warning Notifications were explained in the \"setup\" section; this page only explains the function params.","title":"Notifications API"},{"location":"api/notifapi/#send-settings","text":"Params receiver <instance; player> Player who will receive the notification (not optional) title <string> This is the title of the notification (leave nil and will be \"Alert\") text <string> This is the text of the notification (not optional) color <color3> Color of the notification (leave it nil and will be \"Pink-red\") Hint Color property accepts <brickcolor> constructor.","title":".send() settings"},{"location":"api/role/","text":"Role API Roles are useful for commands, right? Warning Roles are not removable (There's no .removerole() function.) .newrole() usage Function Arguments properties <table> Properties color <color3> Role color (optional & useless for now ) name <string> Role name (not optional) permissions <table> Role permissions (not optional) Permissions Available OPEN_COMMAND_BAR Determines if player can open the command bar. Example . newrole ( { -- Properties color = Color3 . fromRGB ( 255 , 0 , 0 ), name = \"admin\" , permissions = { \"OPEN_COMMAND_BAR\" } } ) player.roles.add() usage Function Arguments role name <string> Example module . players [ \"playername\" ]. roles . add ( \"Admin\" ) Warning This isn't the player <instance> is a function array in the \"players\" array of the module. player.roles.remove() usage Function Arguments role name <string> Example module . players [ \"playername\" ]. roles . remove ( \"Admin\" ) -- bye bye admin Danger Wrap this with .catch() to catch errors. (Constants will throw error if you don't update them) Repair local roles = module . players [ \"playername\" ]. roles module . players [ \"playername\" ]. roles . remove ( \"Admin\" ). then_do ( function () roles = module . players [ \"playername\" ]. roles -- Re-set the value end )","title":"Role API"},{"location":"api/role/#role-api","text":"Roles are useful for commands, right? Warning Roles are not removable (There's no .removerole() function.)","title":"Role API"},{"location":"api/role/#newrole-usage","text":"Function Arguments properties <table> Properties color <color3> Role color (optional & useless for now ) name <string> Role name (not optional) permissions <table> Role permissions (not optional) Permissions Available OPEN_COMMAND_BAR Determines if player can open the command bar.","title":".newrole() usage"},{"location":"api/role/#example","text":". newrole ( { -- Properties color = Color3 . fromRGB ( 255 , 0 , 0 ), name = \"admin\" , permissions = { \"OPEN_COMMAND_BAR\" } } )","title":"Example"},{"location":"api/role/#playerrolesadd-usage","text":"Function Arguments role name <string>","title":"player.roles.add() usage"},{"location":"api/role/#example_1","text":"module . players [ \"playername\" ]. roles . add ( \"Admin\" ) Warning This isn't the player <instance> is a function array in the \"players\" array of the module.","title":"Example"},{"location":"api/role/#playerrolesremove-usage","text":"Function Arguments role name <string>","title":"player.roles.remove() usage"},{"location":"api/role/#example_2","text":"module . players [ \"playername\" ]. roles . remove ( \"Admin\" ) -- bye bye admin Danger Wrap this with .catch() to catch errors. (Constants will throw error if you don't update them)","title":"Example"},{"location":"api/role/#repair","text":"local roles = module . players [ \"playername\" ]. roles module . players [ \"playername\" ]. roles . remove ( \"Admin\" ). then_do ( function () roles = module . players [ \"playername\" ]. roles -- Re-set the value end )","title":"Repair"},{"location":"changelog/1.0/","text":"v1.0 - Changelog There's nothing. Coming Soon I'll be adding .addpresets() to auto-give role to players when joined.","title":"v1.0"},{"location":"changelog/1.0/#v10-changelog","text":"There's nothing. Coming Soon I'll be adding .addpresets() to auto-give role to players when joined.","title":"v1.0 - Changelog"},{"location":"setup/Inputbind/","text":"Editing Input Binds Bug This function edits the input binds of the module but if the player has a high ping the changes may not be applied. Example module . inputBind ( \"CommandBar\" , \"Q\" ) Now, we'll must be able to open and close the command bar with 'Q'. Tip You can check all input methods in the API documentation.","title":"Editing Input Binds"},{"location":"setup/Inputbind/#editing-input-binds","text":"Bug This function edits the input binds of the module but if the player has a high ping the changes may not be applied.","title":"Editing Input Binds"},{"location":"setup/Inputbind/#example","text":"module . inputBind ( \"CommandBar\" , \"Q\" ) Now, we'll must be able to open and close the command bar with 'Q'. Tip You can check all input methods in the API documentation.","title":"Example"},{"location":"setup/cmds/","text":"Commands Basic Commands Script local cmdUtil = require ( path ) cmdUtil . listen ( { [ \"command\" ] = \"test\" , [ \"callback\" ] = function ( info ) print ( info ) end ) } ) Expected Output { [ \"caller\" ] = game . Players . PLAYERNAME , [ \"arguments\" ] = { [ 1 ] = \"arguments\" } } Hint Check Commands API documentation for complex usage.","title":"First Command"},{"location":"setup/cmds/#commands","text":"","title":"Commands"},{"location":"setup/cmds/#basic-commands","text":"Script local cmdUtil = require ( path ) cmdUtil . listen ( { [ \"command\" ] = \"test\" , [ \"callback\" ] = function ( info ) print ( info ) end ) } ) Expected Output { [ \"caller\" ] = game . Players . PLAYERNAME , [ \"arguments\" ] = { [ 1 ] = \"arguments\" } } Hint Check Commands API documentation for complex usage.","title":"Basic Commands"},{"location":"setup/installation/","text":"Installation Common Method > Click here to get the module local cmdUtil = require ( path ) -- CODE Tip This is the most stable and easy method of installation. (Client & server friendly) Loading via ID local cmdUtil = game : GetService ( \"InsertService\" ): LoadAsset ( 6413343401 ) cmdUtil . Parent = game : GetService ( \"ReplicatedStorage\" ) cmdUtil = require ( cmdUtil ) -- CODE Warning This method only can be used from the server-side.","title":"Installing"},{"location":"setup/installation/#common-method","text":"> Click here to get the module local cmdUtil = require ( path ) -- CODE Tip This is the most stable and easy method of installation. (Client & server friendly)","title":"Common Method"},{"location":"setup/installation/#loading-via-id","text":"local cmdUtil = game : GetService ( \"InsertService\" ): LoadAsset ( 6413343401 ) cmdUtil . Parent = game : GetService ( \"ReplicatedStorage\" ) cmdUtil = require ( cmdUtil ) -- CODE Warning This method only can be used from the server-side.","title":"Loading via ID"},{"location":"setup/notifications/","text":"Using Notifications Script local cmdUtil = require ( path ) cmdUtil . send ( \"notification\" , { [ \"receiver\" ] = game . Players . RiverCryptz , -- You can always use only the player name. [ \"title\" ] = \"Title\" , [ \"text\" ] = \"This is a very cool module!\" }) Game This is how the notificacion should see in the game. Warning Notification system does not uses tweens. (FOR NOW)","title":"Using Notifications"},{"location":"setup/notifications/#using-notifications","text":"Script local cmdUtil = require ( path ) cmdUtil . send ( \"notification\" , { [ \"receiver\" ] = game . Players . RiverCryptz , -- You can always use only the player name. [ \"title\" ] = \"Title\" , [ \"text\" ] = \"This is a very cool module!\" }) Game This is how the notificacion should see in the game. Warning Notification system does not uses tweens. (FOR NOW)","title":"Using Notifications"}]}